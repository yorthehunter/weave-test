@import '../../core/index';

// Badge
//
// Used to indicate that something has changed “behind the scenes” and that a
// user should address the issue in order to dismiss the badge

@mixin weave-badge {
  @include typeset;
  @include display-as;
  @include color;
  @include bg;
  @include rounded;
  @include elevated;

  width: var(--size);
  height: var(--size);
  justify-content: center;
  align-items: center;
  vertical-align: middle;
  text-align: center;
  transform: translate(-50%, -50%);

  // Empty badges still render, but as a smaller dot
  &:empty {
    width: calc(var(--size) / 2);
    height: calc(var(--size) / 2);
  }
}

.weave-badge {
  // Defaults
  --border-radius: var(--border-radius-circle);
  --display-as: inline-flex;
  --elevation: var(--elevated-1);
  --z-index: var(--z-index-1);
  --font-color: #{$color-white};
  --bg-color: #{$color-watermelon};
  --font-size: var(--type-size-f0);
  --line-height: var(--component-line-height-f0);
  --size: 1rem;
  @include weave-badge;
}

.weave-badge--inline {
  transform: translate(0, 0);
}

.weave-badge--upper-right {
  position: absolute;
  top: 0;
  right: 0;
  transform: translate(50%, -50%);
}

// .weave-has-badge allows a badge to be generated as a pseudo element outside
// of the DOM and can have dynamic content.
.weave-has-badge {
  position: relative;

  // Small badge, no content inside
  &:after {
    @extend %weave-badge, %weave-badge--upper-right !optional;
    content: '';
    width: calc(var(--size) / 2);
    height: calc(var(--size) / 2);
  }

  // Normal badge, with content
  &[data-badge] {
    &:after {
      content: attr(data-badge);
      width: var(--size);
      height: var(--size);
    }
  }

  // No badge (undefined)
  &[data-badge="none"],
  &[data-badge="undefined"],
  &[data-badge="null"],
  .is-undefined,
  .is-null {
    &:after {
      display: none;
    }
  }
}
